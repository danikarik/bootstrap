{"version":3,"sources":["webpack:///./resources/assets/ui/App.css?71d7","webpack:///./resources/assets/ui/App.css","webpack:///./resources/assets/ui/components/CSRFToken.tsx","webpack:///./resources/assets/ui/App.tsx","webpack:///./resources/assets/ui/index.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","components_CSRFToken","_super","CSRFToken","props","_this","call","this","state","token","getToken","tslib_es6","prototype","meta","document","head","querySelector","console","error","render","react","type","name","value","assets_ui_App","App","row","justify","align","spin","size","react_dom","getElementById"],"mappings":"gHACA,IAAAA,EAAcC,EAAQ,IAEtB,iBAAAD,MAAA,EAA4CE,EAAAC,EAASH,EAAA,MAOrD,IAAAI,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEaP,EAAQ,GAARA,CAA8DD,EAAAI,GAE3EJ,EAAAS,SAAAP,EAAAQ,QAAAV,EAAAS,6BCjBAC,EAAAR,EAAAQ,QAA2BT,EAAQ,GAARA,EAA0D,IAErFE,EAAUF,EAAQ,IAAsI,IAGxJS,EAAAC,KAAA,CAAcT,EAAAC,EAAS,4FCyBRS,EAxBf,SAAAC,GACI,SAAAC,EAAYC,GAAZ,IAAAC,EACIH,EAAAI,KAAAC,KAAMH,IAAMG,YACZF,EAAKG,MAAQ,CACTC,MAAOJ,EAAKK,cAkBxB,OAtBwBC,EAAA,EAAAR,EAAAD,GAOZC,EAAAS,UAAAF,SAAR,WACI,IAAID,EAAQ,GACRI,EAAOC,SAASC,KAAKC,cAAc,2BAMvC,OALIH,EACAJ,EAAQI,EAAKxB,QAEb4B,QAAQC,MAAM,wBAEXT,GAEJN,EAAAS,UAAAO,OAAP,WACI,OACIC,EAAA,uBAAOC,KAAK,SAASC,KAAK,sBAAsBC,MAAOhB,KAAKC,MAAMC,SAG9EN,EAtBA,CAAwBiB,EAAA,WCeTI,SAff,SAAAtB,GAAA,SAAAuB,mDAaA,OAbkBd,EAAA,EAAAc,EAAAvB,GACPuB,EAAAb,UAAAO,OAAP,WACI,OACIC,EAAA,yBACIA,EAAA,cAACnB,EAAS,MACVmB,EAAA,cAACM,EAAA,EAAG,CAACL,KAAK,OAAOM,QAAQ,eAAeC,MAAM,UAC1CR,EAAA,cAACS,EAAA,EAAI,CAACC,KAAK,UACXV,EAAA,cAACS,EAAA,EAAI,CAACC,KAAK,UACXV,EAAA,cAACS,EAAA,EAAI,CAACC,KAAK,aAK/BL,EAbA,CAAkBL,EAAA,YCFlBW,EAAA,OACEX,EAAA,cAACI,EAAG,MACJV,SAASkB,eAAe","file":"/ui/index.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!./App.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!./App.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!./App.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!antd/dist/antd.css\"), \"\");\n\n// module\nexports.push([module.id, \"\\n\", \"\"]);\n\n// exports\n","import * as React from 'react';\n\ninterface IProps {}\n\ninterface IState { token: string }\n\nclass CSRFToken extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n        this.state = {\n            token: this.getToken()\n        }\n    }\n    private getToken(): string {\n        let token = '';\n        let meta = document.head.querySelector('meta[name=\"csrf-token\"]') as HTMLMetaElement;\n        if (meta) {\n            token = meta.content;\n        } else {\n            console.error('CSRF token not found');\n        }\n        return token;\n    }\n    public render() {\n        return (\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={this.state.token} />\n        );\n    }\n}\n\nexport default CSRFToken;\n","import { Row, Spin } from 'antd';\nimport CSRFToken from './components/CSRFToken';\nimport * as React from 'react';\nimport './App.css';\n\n\nclass App extends React.Component {\n    public render() {\n        return (\n            <div>\n                <CSRFToken/>\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                    <Spin size=\"large\" />\n                    <Spin size=\"large\" />\n                    <Spin size=\"large\" />\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}